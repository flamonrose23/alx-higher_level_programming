==================================
    how 0-add_integer.py works
==================================

The module only contains the function ``add_integer()``, which needs
to be imported as follows:

    >>> add_integer = __import__("0-add_integer").add_integer

And not as such:

    >>> from 0-add_integer import add_integer
    Traceback (most recent call last):
    SyntaxError: invalid syntax

It can take one argument as the second one is by default 98:

    >>> add_integer(0)
    98

Ordinarily it takes two integers:

    >>> add_integer(0, 100)
    100

Floats are also acceptable, but they're cast into integers:

    >>> add_integer(5.5, 4.7)
    9

However, any other type raises a TypeError:

    >>> add_integer('integer', 3) #doctest: +ELLIPSIS
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer

    >>> add_integer(2, 'test') #doctest: +ELLIPSIS
    Traceback (most recent call last):
        ...
    TypeError: b must be an integer
